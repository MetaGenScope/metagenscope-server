version: 2

# Common steps for building server Docker images
build_steps: &build_steps
  docker:
    - image: circleci/node:9.2.0

  steps:
    - checkout

    - setup_remote_docker

    - run:
        name: Set COMMIT env var
        command: echo 'export COMMIT=${CIRCLE_SHA1::8}' >> $BASH_ENV

    - run:
        name: Sign in to Docker Hub
        command: docker login -u $DOCKER_ID -p $DOCKER_PASSWORD

    - run:
        name: Build and push mongo-db
        environment:
          DB_SERVICE: mongo
        command: |
          docker build ./database_docker/mongo_db -t $DB_SERVICE:$COMMIT
          docker tag $DB_SERVICE:$COMMIT $DOCKER_ORG/$DB_SERVICE:$TAG
          docker push $DOCKER_ORG/$DB_SERVICE

    - run:
        name: Build and push metagenscope-db
        environment:
          DB_SERVICE: metagenscope-db
        command: |
          docker build ./database_docker/postgres_db -t $DB_SERVICE:$COMMIT
          docker tag $DB_SERVICE:$COMMIT $DOCKER_ORG/$DB_SERVICE:$TAG
          docker push $DOCKER_ORG/$DB_SERVICE

    - run:
        name: Build and push redis
        environment:
          DB_SERVICE: redis
        command: |
          docker build ./database_docker/redis -t $DB_SERVICE:$COMMIT
          docker tag $DB_SERVICE:$COMMIT $DOCKER_ORG/$DB_SERVICE:$TAG
          docker push $DOCKER_ORG/$DB_SERVICE

    - run:
        name: Build and push rabbitmq
        environment:
          DB_SERVICE: rabbitmq
        command: |
          docker build ./database_docker/rabbitmq -t $DB_SERVICE:$COMMIT
          docker tag $DB_SERVICE:$COMMIT $DOCKER_ORG/$DB_SERVICE:$TAG
          docker push $DOCKER_ORG/$DB_SERVICE

    - run:
        name: Build and push metagenscope-worker
        environment:
          DB_SERVICE: metagenscope-worker
        command: |
          docker build . -f Dockerfile-worker -t $DB_SERVICE:$COMMIT
          docker tag $DB_SERVICE:$COMMIT $DOCKER_ORG/$DB_SERVICE:$TAG
          docker push $DOCKER_ORG/$DB_SERVICE

    - run:
        name: Build and push metagenscope-service
        environment:
          MAIN_SERVICE: metagenscope-service
        command: |
          docker build . -t $MAIN_SERVICE:$COMMIT
          docker tag $MAIN_SERVICE:$COMMIT $DOCKER_ORG/$MAIN_SERVICE:$TAG
          docker push $DOCKER_ORG/$MAIN_SERVICE


# CircleCI Jobs
jobs:
  test_app:
    docker:
      - image: circleci/python:3.6.3-jessie
        environment:
          SECRET_KEY: my_precious
          APP_SETTINGS: testing
          DATABASE_TEST_URL: postgresql://postgres:@localhost/metagenscope_test
          MONGODB_TEST_HOST: mongodb://localhost/metagenscope_test
      - image: metagenscope/postgres:0afd77cd
        auth:
          username: $DOCKER_ID
          password: $DOCKER_PASSWORD
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
      - image: circleci/mongo

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install Python Dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Lint app
          command: |
            . venv/bin/activate
            make lint

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Provision database
          command: |
            . venv/bin/activate
            python manage.py recreate_db

      - run:
          name: Run application tests
          command: |
            . venv/bin/activate
            python manage.py cov

      - store_artifacts:
          path: htmlcov
          destination: test-reports

workflows:
  version: 2

  app_pipeline:
    jobs:
      - test_app
